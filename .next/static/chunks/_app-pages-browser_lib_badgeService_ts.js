"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_badgeService_ts"],{

/***/ "(app-pages-browser)/./lib/badgeService.ts":
/*!*****************************!*\
  !*** ./lib/badgeService.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BADGE_DEFINITIONS: () => (/* binding */ BADGE_DEFINITIONS),\n/* harmony export */   calculateUserStats: () => (/* binding */ calculateUserStats),\n/* harmony export */   checkAndAwardBadges: () => (/* binding */ checkAndAwardBadges)\n/* harmony export */ });\nconst BADGE_DEFINITIONS = [\n    // First Quiz Badge\n    {\n        id: 'first-quiz',\n        name: 'First Steps',\n        description: 'Complete your very first quiz',\n        icon: 'ri-star-line',\n        color: 'from-yellow-400 to-orange-500',\n        type: 'milestone',\n        condition: (stats)=>stats.quizzesCompleted >= 1\n    },\n    // Level-based badges\n    {\n        id: 'level-5',\n        name: 'Rising Star',\n        description: 'Reach Level 5',\n        icon: 'ri-arrow-up-line',\n        color: 'from-blue-400 to-indigo-500',\n        type: 'level',\n        condition: (stats)=>stats.level >= 5\n    },\n    {\n        id: 'level-10',\n        name: 'Knowledge Seeker',\n        description: 'Reach Level 10',\n        icon: 'ri-book-open-line',\n        color: 'from-green-400 to-emerald-500',\n        type: 'level',\n        condition: (stats)=>stats.level >= 10\n    },\n    {\n        id: 'level-20',\n        name: 'Expert Learner',\n        description: 'Reach Level 20',\n        icon: 'ri-award-line',\n        color: 'from-purple-400 to-pink-500',\n        type: 'level',\n        condition: (stats)=>stats.level >= 20\n    },\n    {\n        id: 'level-50',\n        name: 'Master Coder',\n        description: 'Reach Level 50',\n        icon: 'ri-crown-line',\n        color: 'from-yellow-400 via-orange-500 to-red-500',\n        type: 'level',\n        condition: (stats)=>stats.level >= 50\n    },\n    // Quiz completion badges\n    {\n        id: 'quiz-5',\n        name: 'Quiz Enthusiast',\n        description: 'Complete 5 quizzes',\n        icon: 'ri-questionnaire-line',\n        color: 'from-cyan-400 to-blue-500',\n        type: 'quiz',\n        condition: (stats)=>stats.quizzesCompleted >= 5\n    },\n    {\n        id: 'quiz-10',\n        name: 'Quiz Master',\n        description: 'Complete 10 quizzes',\n        icon: 'ri-medal-line',\n        color: 'from-purple-400 to-pink-500',\n        type: 'quiz',\n        condition: (stats)=>stats.quizzesCompleted >= 10\n    },\n    {\n        id: 'quiz-25',\n        name: 'Quiz Champion',\n        description: 'Complete 25 quizzes',\n        icon: 'ri-trophy-line',\n        color: 'from-yellow-400 to-orange-500',\n        type: 'quiz',\n        condition: (stats)=>stats.quizzesCompleted >= 25\n    },\n    {\n        id: 'quiz-50',\n        name: 'Quiz Legend',\n        description: 'Complete 50 quizzes',\n        icon: 'ri-fire-line',\n        color: 'from-red-400 to-pink-500',\n        type: 'quiz',\n        condition: (stats)=>stats.quizzesCompleted >= 50\n    },\n    // Accuracy badges\n    {\n        id: 'accuracy-80',\n        name: 'Sharp Mind',\n        description: 'Achieve 80% accuracy',\n        icon: 'ri-brain-line',\n        color: 'from-green-400 to-emerald-500',\n        type: 'accuracy',\n        condition: (stats)=>stats.accuracy >= 80 && stats.quizzesCompleted >= 3\n    },\n    {\n        id: 'accuracy-90',\n        name: 'Precision Master',\n        description: 'Achieve 90% accuracy',\n        icon: 'ri-target-line',\n        color: 'from-blue-400 to-indigo-500',\n        type: 'accuracy',\n        condition: (stats)=>stats.accuracy >= 90 && stats.quizzesCompleted >= 5\n    },\n    {\n        id: 'accuracy-95',\n        name: 'Perfect Aim',\n        description: 'Achieve 95% accuracy',\n        icon: 'ri-bullseye-line',\n        color: 'from-purple-400 to-pink-500',\n        type: 'accuracy',\n        condition: (stats)=>stats.accuracy >= 95 && stats.quizzesCompleted >= 10\n    },\n    // Category completion badges\n    {\n        id: 'category-1',\n        name: 'Category Explorer',\n        description: 'Complete quizzes in 1 different category',\n        icon: 'ri-compass-line',\n        color: 'from-cyan-400 to-blue-500',\n        type: 'category',\n        condition: (stats)=>stats.categoriesCompleted.length >= 1\n    },\n    {\n        id: 'category-3',\n        name: 'Multi-Skill Learner',\n        description: 'Complete quizzes in 3 different categories',\n        icon: 'ri-layout-grid-line',\n        color: 'from-green-400 to-emerald-500',\n        type: 'category',\n        condition: (stats)=>stats.categoriesCompleted.length >= 3\n    },\n    {\n        id: 'category-all',\n        name: 'Complete Scholar',\n        description: 'Complete quizzes in all 6 categories',\n        icon: 'ri-global-line',\n        color: 'from-purple-400 to-pink-500',\n        type: 'category',\n        condition: (stats)=>stats.categoriesCompleted.length >= 6\n    },\n    // Perfect score badges\n    {\n        id: 'perfect-1',\n        name: 'Perfect Score',\n        description: 'Get a perfect score on any quiz',\n        icon: 'ri-check-double-line',\n        color: 'from-green-400 to-emerald-500',\n        type: 'milestone',\n        condition: (stats)=>stats.perfectScores >= 1\n    },\n    {\n        id: 'perfect-3',\n        name: 'Consistent Excellence',\n        description: 'Get perfect scores on 3 quizzes',\n        icon: 'ri-star-double-line',\n        color: 'from-blue-400 to-indigo-500',\n        type: 'milestone',\n        condition: (stats)=>stats.perfectScores >= 3\n    },\n    {\n        id: 'perfect-5',\n        name: 'Perfectionist',\n        description: 'Get perfect scores on 5 quizzes',\n        icon: 'ri-diamond-line',\n        color: 'from-purple-400 to-pink-500',\n        type: 'milestone',\n        condition: (stats)=>stats.perfectScores >= 5\n    },\n    // Streak badges\n    {\n        id: 'streak-3',\n        name: 'On Fire',\n        description: 'Complete 3 quizzes in a row',\n        icon: 'ri-fire-line',\n        color: 'from-orange-400 to-red-500',\n        type: 'streak',\n        condition: (stats)=>stats.currentStreak >= 3\n    },\n    {\n        id: 'streak-7',\n        name: 'Week Warrior',\n        description: 'Complete 7 quizzes in a row',\n        icon: 'ri-calendar-check-line',\n        color: 'from-purple-400 to-pink-500',\n        type: 'streak',\n        condition: (stats)=>stats.currentStreak >= 7\n    },\n    {\n        id: 'streak-14',\n        name: 'Fortnight Fighter',\n        description: 'Complete 14 quizzes in a row',\n        icon: 'ri-time-line',\n        color: 'from-blue-400 to-indigo-500',\n        type: 'streak',\n        condition: (stats)=>stats.currentStreak >= 14\n    },\n    // Points badges\n    {\n        id: 'points-100',\n        name: 'Century Club',\n        description: 'Earn 100 total points',\n        icon: 'ri-coins-line',\n        color: 'from-yellow-400 to-orange-500',\n        type: 'milestone',\n        condition: (stats)=>stats.totalPoints >= 100\n    },\n    {\n        id: 'points-500',\n        name: 'Half Grand',\n        description: 'Earn 500 total points',\n        icon: 'ri-bank-card-line',\n        color: 'from-green-400 to-emerald-500',\n        type: 'milestone',\n        condition: (stats)=>stats.totalPoints >= 500\n    },\n    {\n        id: 'points-1000',\n        name: 'Grand Master',\n        description: 'Earn 1000 total points',\n        icon: 'ri-vip-crown-line',\n        color: 'from-purple-400 to-pink-500',\n        type: 'milestone',\n        condition: (stats)=>stats.totalPoints >= 1000\n    },\n    // Special badges\n    {\n        id: 'voice-master',\n        name: 'Voice Master',\n        description: 'Complete voice interaction quiz with 90%+ accuracy',\n        icon: 'ri-mic-2-line',\n        color: 'from-purple-400 to-pink-500',\n        type: 'milestone',\n        condition: (stats)=>{\n            const voiceQuiz = stats.quizzes.find((q)=>q.category === 'voice-interaction');\n            return voiceQuiz && voiceQuiz.correctAnswers / voiceQuiz.totalAnswers >= 0.9;\n        }\n    },\n    {\n        id: 'speed-demon',\n        name: 'Speed Demon',\n        description: 'Complete 5 quizzes in one day',\n        icon: 'ri-speed-up-line',\n        color: 'from-red-400 to-pink-500',\n        type: 'milestone',\n        condition: (stats)=>{\n            const today = new Date().toDateString();\n            const todayQuizzes = stats.quizzes.filter((q)=>new Date(q.createdAt).toDateString() === today);\n            return todayQuizzes.length >= 5;\n        }\n    }\n];\nasync function checkAndAwardBadges(userStats) {\n    const newBadges = [];\n    for (const badgeDef of BADGE_DEFINITIONS){\n        if (badgeDef.condition(userStats)) {\n            try {\n                const response = await fetch('/api/badges', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        userId: userStats.userId,\n                        name: badgeDef.name,\n                        description: badgeDef.description,\n                        icon: badgeDef.icon,\n                        color: badgeDef.color,\n                        type: badgeDef.type,\n                        metadata: badgeDef.metadata\n                    })\n                });\n                if (response.ok) {\n                    newBadges.push(badgeDef.name);\n                }\n            } catch (error) {\n                console.error('Error awarding badge:', error);\n            }\n        }\n    }\n    return newBadges;\n}\nfunction calculateUserStats(quizzes, userId) {\n    const totalPoints = quizzes.reduce((sum, q)=>sum + (q.points || 0), 0);\n    const level = Math.floor(totalPoints / 100) + 1;\n    const totalCorrect = quizzes.reduce((sum, q)=>sum + (q.correctAnswers || 0), 0);\n    const totalAnswered = quizzes.reduce((sum, q)=>sum + (q.totalAnswers || 0), 0);\n    const accuracy = totalAnswered > 0 ? Math.round(totalCorrect / totalAnswered * 100) : 0;\n    // Get unique categories\n    const categoriesCompleted = [\n        ...new Set(quizzes.map((q)=>q.category).filter(Boolean))\n    ];\n    // Count perfect scores (100% accuracy)\n    const perfectScores = quizzes.filter((q)=>q.correctAnswers && q.totalAnswers && q.correctAnswers / q.totalAnswers === 1).length;\n    // Calculate current streak (simplified - assumes quizzes are in chronological order)\n    let currentStreak = 0;\n    let maxStreak = 0;\n    let tempStreak = 0;\n    for(let i = quizzes.length - 1; i >= 0; i--){\n        const quiz = quizzes[i];\n        if (quiz.correctAnswers && quiz.totalAnswers && quiz.correctAnswers / quiz.totalAnswers >= 0.6) {\n            tempStreak++;\n            if (i === quizzes.length - 1) currentStreak = tempStreak;\n        } else {\n            maxStreak = Math.max(maxStreak, tempStreak);\n            tempStreak = 0;\n        }\n    }\n    maxStreak = Math.max(maxStreak, tempStreak);\n    return {\n        userId,\n        level,\n        totalPoints,\n        quizzesCompleted: quizzes.length,\n        accuracy,\n        quizzes,\n        categoriesCompleted,\n        perfectScores,\n        currentStreak,\n        maxStreak\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/badgeService.ts\n"));

/***/ })

}]);